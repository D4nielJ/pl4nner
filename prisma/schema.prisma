// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

enum taskPriority {
  LOW
  MEDIUM
  HIGH
  URGENT
}

enum taskStatus {
  TODO
  IN_PROGRESS
  BLOCKED
  DONE
}

model Project {
  id         String   @id @default(uuid())
  name       String   @db.VarChar(255)
  order      Int      @default(autoincrement())
  columns    Column[]
  tasks      Task[]
  isArchived Boolean  @default(false)
}

model Column {
  id        String     @id @default(uuid())
  name      String     @db.VarChar(255)
  order     Int        @default(autoincrement())
  status    taskStatus
  project   Project    @relation(fields: [projectId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  projectId String
  tasks     Task[]
}

model Task {
  id          String       @id @default(uuid())
  name        String       @db.VarChar(255)
  description String?
  order       Int          @default(autoincrement())
  priority    taskPriority @default(MEDIUM)
  status      taskStatus   @default(TODO)
  column      Column       @relation(fields: [columnId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  columnId    String
  project     Project      @relation(fields: [projectId], references: [id], onUpdate: Cascade, onDelete: Cascade)
  projectId   String
}
